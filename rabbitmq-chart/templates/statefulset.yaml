apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "rabbitmq-chart.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{ include "rabbitmq-chart.labels" . }}
spec:
  serviceName: "rabbitmq"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "rabbitmq-chart.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "rabbitmq-chart.name" . }}
    spec:
      initContainers:
      - name: init-rabbitmq
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["sh", "-c", "chmod 600 /var/lib/rabbitmq/.erlang.cookie"]
        volumeMounts:
        - name: rabbitmq-storage
          mountPath: /var/lib/rabbitmq
        securityContext:
          runAsUser: 1000690000
          runAsGroup: 0
          runAsNonRoot: true
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: false
      containers:
      - name: rabbitmq
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: amqp
          containerPort: {{ .Values.service.amqpPort }}
        - name: stream
          containerPort: {{ .Values.service.streamPort }}
        - name: management
          containerPort: {{ .Values.service.managementPort }}
        volumeMounts:
        - name: rabbitmq-storage
          mountPath: /var/lib/rabbitmq
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        - name: rabbitmq-certs
          mountPath: /etc/rabbitmq/certs
        - name: rabbitmq-pub-certs
          mountPath: /etc/rabbitmq/pub-certs
        - name: enabled-plugins
          mountPath: /etc/rabbitmq/enabled_plugins
          subPath: enabled_plugins
        securityContext:
          runAsUser: 1000690000
          runAsGroup: 0
          runAsNonRoot: true
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: false
      securityContext:
          runAsUser: 1000690000
          runAsGroup: 0
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-downstream-conf # or rabbitmq-downstream-conf based on your need
      - name: rabbitmq-certs
        secret:
          secretName: rabbitmq-certs
      - name: rabbitmq-pub-certs
        secret:
          secretName: rabbitmq-pub-certs
      - name: enabled-plugins
        configMap:
          name: enabled-plugins
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
